BMLoader={scripts:{},parseFile:function(e){var t=false,a="==Bookmarklet==",r="==/Bookmarklet==",o=/^(\s*\/\/\s*)/,s={name:"",version:"",description:"",repository:"",author:"",email:"",url:"",license:"",script:[],style:[],init:[]},i={},n=[],c=[],l=false;e.match(/[^\r\n]+/g).forEach(function(e,p,m){if(o.test(e)){var d=e.replace(o,"").trim(),f=d.toLowerCase().replace(/\s+/g,"");if(!t){if(f==a.toLowerCase()){t=true;l=true}}else{if(f==r.toLowerCase()){t=false}else{var h=d.match(/^@([^\s]+)\s+(.*)$/);if(h){var u=h[1],k=h[2];if(u){if(Array.isArray(s[u])){i[u]=i[u]||[];i[u].push(k)}else{i[u]=k}}else{warn(`ignoring invalid metadata option: \`${u}\``)}}}}}else{n.push(e)}if(t&&p+1==m.length){c.push("missing metdata block closing `"+r+"`")}});return{metadata:i,code:n.join("\n"),errors:c.length?c:null,bookmarklet:l}},loadBookmarklet:function(e){return fetch(e).then(e=>{if(e.ok){return e.text()}else{throw new Error("Couldn't load the bookmarklet")}}).then(BMLoader.processScript).catch(alert)},processScript:async function(scripttext){var parsed=BMLoader.parseFile(scripttext),meta=parsed.metadata,code=parsed.code,waitScript=new Promise(async function(e){if(!meta.script){e()}else{meta.script.forEach(async function(t,a,r){await BMLoader.loadBookmarklet(t);if(a==r.length-1){e()}})}});if(meta.style){meta.style.forEach(function(e){var t=document.createElement("link");t.rel="stylesheet";t.href=e;document.head.append(t)})}await waitScript;if(parsed.bookmarklet){var namespace=BMLoader.scripts[meta.name]=BMLoader.scripts[meta.name]||parsed;namespace.clicks=namespace.clicks+1||0;eval(`(function(){${code}})`).call(namespace)}else{eval(code)}return},loadGithub:function(e){var t=e.split("/"),a=t.slice(0,2).join("/"),r=t.slice(2).join("/");return fetch(`https://api.github.com/repos/${a}/releases/latest`).then(e=>{if(e.ok){return e.json()}else{throw new Error("Couldn't connect to GitHub")}}).then(e=>{BMLoader.loadBookmarklet(`https://cdn.rawgit.com/${a}/${e.tag_name}/${r}`)}).catch(alert)}};