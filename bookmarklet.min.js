function quoteEscape(t){return t.replace('"','\\"').replace("'","\\'")}function convert(t){var e="",r=parseFile(t),s=r.options,a=r.code
if(s.script){s.script=s.script.reverse()
for(var n=0,o=s.script.length;o>n;n++)a=loadScript(a,s.script[n])}if(s.style){for(var i=0,c=s.style.length;c>i;i++)e+='var link = document.createElement("link"); link.rel="stylesheet"; link.href = "'+quoteEscape(s.style[i])+'"; document.body.appendChild(link);'
a=e+a}return a}function parseFile(t){var e=!1,r="==Bookmarklet==",s="==/Bookmarklet==",a=/^(\s*\/\/\s*)/,n=metadata.keys,o=metadata.types,i={},c=[],l=[]
return t.match(/[^\r\n]+/g).forEach(function(t,p,u){if(a.test(t)){var d=t.replace(a,"").trim(),f=d.toLowerCase().replace(/\s+/g,"")
if(e)if(f==s.toLowerCase())e=!1
else{var m=d.match(/^@([^\s]+)\s+(.*)$/)
if(m){var h=m[1],v=m[2]
h?n[h]==o.list?(i[h]=i[h]||[],i[h].push(v)):i[m[1]]=m[2]:warn("ignoring invalid metadata option: `"+h+"`")}}else f==r.toLowerCase()&&(e=!0)}else c.push(t)
e&&p+1==u.length&&l.push("missing metdata block closing `"+s+"`")}),{code:c.join("\n"),options:i,errors:l.length?l:null}}function quoteEscape(t){return t.replace('"','\\"').replace("'","\\'")}function loadScript(t,e){return"function callback(){"+t+'}var s = document.createElement("script"); if (s.addEventListener) {s.addEventListener("load", callback, false)} else if (s.readyState) {s.onreadystatechange = callback}s.src = "'+quoteEscape(e)+'";document.body.appendChild(s);'}function loadBookmarklet(t){var e=new XMLHttpRequest
e.onreadystatechange=function(){4==e.readyState&&(200==e.status?processScript(e.responseText):400==e.status&&alert("There was an error 400"))},e.open("GET",t,!0),e.send()}function processScript(scripttext){eval(convert(scripttext))}function loadGithub(t,e){function r(t){return t.split("/").filter(function(t){return""!==t}).join("/")}t=r(t)
var s=new XMLHttpRequest
s.onreadystatechange=function(){4==s.readyState&&(200==s.status?(e=r(e),loadBookmarklet("https://cdn.rawgit.com/"+t+"/"+JSON.parse(s.responseText).tag_name+"/"+e)):400==s.status&&alert("Couldn't connect to GitHub"))},s.open("GET","https://api.github.com/repos/"+t+"/releases/latest",!0),s.send()}var str=1,list=2,metadata={types:{string:str,list:list},keys:{name:str,version:str,description:str,repository:str,author:str,email:str,url:str,license:str,script:list,style:list}}
