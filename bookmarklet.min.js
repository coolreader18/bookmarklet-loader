BMLoader={version:"v2.1.2",scripts:{},parseFile:(e,t)=>{var r=false,a="==Bookmarklet==",s="==/Bookmarklet==",o=/^(\s*\/\/\s*)/,i={name:"",version:"",description:"",repository:"",author:"",email:"",url:"",license:"",script:[],style:[]},l={},n=[],c=[],d=false;e.match(/[^\r\n]+/g).forEach((e,t,p)=>{if(o.test(e)){var h=e.replace(o,"").trim(),m=h.toLowerCase().replace(/\s+/g,"");if(!r){if(m==a.toLowerCase()){r=true;d=true}}else{if(m==s.toLowerCase()){r=false}else{var u=h.match(/^@([^\s]+)\s+(.*)$/);if(u){var f=u[1],g=u[2];if(f){if(Array.isArray(i[f])){l[f]=l[f]||[];l[f].push(g)}else{l[f]=g}}else{warn(`ignoring invalid metadata option: \`${f}\``)}}}}}else{n.push(e)}if(r&&t+1==p.length){c.push(`missing metdata block closing \`${s}\``)}});return{metadata:Object.assign(l,t),code:n.join("\n"),errors:c.length?c:null,bookmarklet:d}},processScript:(scripttext,providedmd)=>new Promise(async resolve=>{var parsed=BMLoader.parseFile(scripttext,providedmd),meta=parsed.metadata,code=parsed.code,waitScript=new Promise(async e=>{if(!meta.script){e()}else{let r=meta.script;for(var t=0;t<r.length;t++){let a=r[t],s=a.split(" "),o;if(s[0]=="dir"){await BMLoader.getGithub("coolreader18/bookmarklet-loader/depend-dir-scripts.min.json").then(e=>{return fetch(e)}).then(e=>e.json()).then(e=>{var t=e[s[1].toLowerCase()];a=t.url.replace(/%version/,s[2]||t.latest);o=t.md})}debugger;await BMLoader.loadBookmarklet(a,o);if(t==r.length-1){e()}}}});if(meta.style){meta.style.forEach(async e=>{var t=e,r=e.split(" "),a=document.createElement("link");a.rel="stylesheet";a.href=t;if(r[0]=="dir"){await BMLoader.getGithub("coolreader18/bookmarklet-loader/depend-dir-styles.min.json").then(e=>fetch(e)).then(e=>e.json()).then(e=>{var a=e[r[1].toLowerCase()];t=a.url.replace(/%version/,r[2]||a.latest)})}document.head.append(a)})}Object.assign(parsed,providedmd);await waitScript;if(parsed.bookmarklet){var namespace=BMLoader.scripts[meta.name]=BMLoader.scripts[meta.name]||parsed;namespace.clicks=namespace.clicks+1||0;eval(`(function(){${code}})`).call(namespace)}else{eval(code)}debugger;resolve()}),loadBookmarklet:(e,t)=>fetch(e).then(e=>{if(e.ok){return e.text()}else{throw new Error("Couldn't load the bookmarklet")}}).then(e=>BMLoader.processScript(e,t)).catch(alert),parseGithub:e=>{var t=e.split("/");return{slug:t.slice(0,2).join("/"),filepath:t.slice(2).join("/")}},getGithub:e=>{var t=BMLoader.parseGithub(e);return fetch(`https://api.github.com/repos/${t.slug}/releases/latest`).then(e=>{if(e.ok){return e.json().then(e=>`https://cdn.rawgit.com/${t.slug}/${e.tag_name}/${t.filepath}`)}else{throw new Error("Couldn't connect to GitHub")}}).catch(alert)},loadGithub:e=>BMLoader.getGithub(e).then(e=>BMLoader.loadBookmarklet(e))};